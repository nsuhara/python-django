"""
Django settings for compare_project project.

Generated by 'django-admin startproject' using Django 2.2.7.

For more information on this file, see
https://docs.djangoproject.com/en/2.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.2/ref/settings/
"""

import os

from sqlalchemy import create_engine
from sqlalchemy.ext.declarative import declarative_base
from sqlalchemy.orm import scoped_session, sessionmaker

try:
    import django_heroku
    IS_HEROKU_SUPPORTED = True
except ImportError:
    IS_HEROKU_SUPPORTED = False

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '$8ds285@4)z=8xx!=+p9^)u7k#5r=2y3!r)as0&6k80%4qq)+c'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django_model.apps.DjangoModelConfig',
    'sqlalchemy_model.apps.SqlalchemyModelConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'compare_project.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'compare_project.wsgi.application'


# Database
# https://docs.djangoproject.com/en/2.2/ref/settings/#databases

# DB_SELECTED = 'sqlite3'
DB_SELECTED = 'postgresql'

if DB_SELECTED == 'sqlite3':
    DB_ENGINE = 'django.db.backends.sqlite3'
    DB_NAME = 'db.sqlite3'
    DB_URI = 'sqlite:///{}'.format(DB_NAME)

    DATABASES = {
        'default': {
            'ENGINE': DB_ENGINE,
            'NAME': os.path.join(BASE_DIR, DB_NAME),
        }
    }

if DB_SELECTED == 'postgresql':
    DB_ENGINE = 'django.db.backends.postgresql_psycopg2'
    DB_PORT = '5432'
    DB_OPTIONS = {}

    if IS_HEROKU_SUPPORTED:
        DB_NAME = '<heroku name>'
        DB_USER = '<heroku user>'
        DB_PASSWORD = '<heroku password>'
        DB_HOST = '<heroku host>'
    else:
        DB_NAME = 'db.postgresql_psycopg2'
        DB_USER = 'nsuhara'
        DB_PASSWORD = 'nsuhara'
        DB_HOST = '127.0.0.1'

    DB_URI = 'postgresql://{}:{}@{}/{}'.format(DB_USER,
                                               DB_PASSWORD, DB_HOST, DB_NAME)

    DATABASES = {
        'default': {
            'ENGINE': DB_ENGINE,
            'NAME': DB_NAME,
            'USER': DB_USER,
            'PASSWORD': DB_PASSWORD,
            'HOST': DB_HOST,
            'PORT': DB_PORT,
            'OPTIONS': DB_OPTIONS,
        },
    }

Engine = create_engine(
    DB_URI,
    encoding='utf-8',
    echo=True
)

session = sessionmaker(
    autocommit=False,
    autoflush=False,
    bind=Engine
)
Session = session()

Base = declarative_base()


# Password validation
# https://docs.djangoproject.com/en/2.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/2.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/2.2/howto/static-files/

STATIC_URL = '/static/'

if IS_HEROKU_SUPPORTED:
    django_heroku.settings(locals())
